{
	"info": {
		"_postman_id": "806e7edf-2082-4e32-84c0-4bdf386164d9",
		"name": "SimpleBookApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14674858"
	},
	"item": [
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Validate Status Code\"] = responseCode.code == 201;\r",
							"var jsondata = pm.response.json()\r",
							"pm.collectionVariables.set(\"AccessToken\", jsondata.accessToken)\r",
							"console.log(pm.collectionVariables.get(\"AccessToken\"));\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"clientName\" : \"Training\",\r\n    \"clientEmail\" : \"training{{$randomInt}}@yopmail.com\"\r\n   \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/api-clients/",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Welcomerequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Validate status code\"] = responseCode.code ==200;\r",
							"\r",
							"pm.test(\" Respsonse Status is OK with has:\", ()=> {\r",
							"    pm.response.to.has.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code is equal 200:\", ()=> {\r",
							"    pm.expect(pm.response.code).to.be.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is arry 200:\", ()=> {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is arry 200:\", ()=> {\r",
							"    pm.expect(pm.response.status).to.be.eql(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GetStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Vaidate response Code\" , function () {\r",
							"    pm.expect(pm.response.code).to.be.eql(200);\r",
							"    pm.expect(pm.response.status).to.be.eql(\"OK\");\r",
							"})\r",
							"\r",
							"pm.test(\"Vaidate responsebody status\" , function () {\r",
							"    pm.expect(pm.response.json().status).to.be.eql(\"OK\");  \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/status",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"validate status code\"] = responseCode.code == 200;\r",
							"\r",
							"var jsonbody = pm.response.json();\r",
							"pm.test(\"Get id of available book\", function () {\r",
							"    pm.expect(jsonbody[0].available).to.be.eql(true)\r",
							"    pm.collectionVariables.set(\"id0\",jsonbody[0].id)\r",
							"})\r",
							"pm.collectionVariables.set(\"name0\",jsonbody[0].name)\r",
							"pm.collectionVariables.set(\"type0\",jsonbody[0].type)\r",
							"\r",
							"console.log(pm.collectionVariables.get(\"id0\"));\r",
							"console.log(pm.collectionVariables.get(\"name0\"));\r",
							"console.log(pm.collectionVariables.get(\"type0\"));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "SingleBook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Validate Status Code\"] = responseCode.code == 200;\r",
							"\r",
							"var jsondata = pm.response.json()\r",
							"pm.test(\"Validate data of the book\", function () {\r",
							"    pm.expect(jsondata.id).to.be.eql(pm.collectionVariables.get(\"id0\"))\r",
							"    pm.expect(jsondata.name).to.be.eql(pm.collectionVariables.get(\"name0\"))\r",
							"    pm.expect(jsondata.type).to.be.eql(pm.collectionVariables.get(\"type0\"))\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books/{{id0}}",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books",
						"{{id0}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "SubmitOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate data of the book\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"var jsondata = pm.response.json()\r",
							"pm.test(\"Validate data of the book\", function () {\r",
							"pm.expect(jsondata.created).to.be.eql(true);\r",
							"pm.collectionVariables.set(\"OrderID0\", jsondata.orderId)\r",
							"});\r",
							"\r",
							"console.log(pm.collectionVariables.get(\"OrderID0\"));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\": {{id0}},\r\n    \"customerName\":\"{{$randomFirstName}}+ {{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllOrders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate data of the book\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"tests[\"Validate the presence of oderid\"] = responseBody.has(pm.collectionVariables.get(\"OrderID0\"))\r",
							"\r",
							"console.log(pm.collectionVariables.get(\"OrderID0\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\": 1,\r\n    \"customerName\":\"John\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetsingleOrderID",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders/{{OrderID0}}",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders",
						"{{OrderID0}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate patch operation\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"customerName\":\"{{$randomFirstName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders/{{OrderID0}}",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders",
						"{{OrderID0}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate delete operation\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.unset(\"OrderID0\")\r",
							"pm.collectionVariables.unset(\"name0\")\r",
							"pm.collectionVariables.unset(\"ID0\")\r",
							"pm.collectionVariables.unset(\"type0\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"customerName\":\"Nagendra\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders/{{OrderID0}}",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders",
						"{{OrderID0}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{AccessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "AccessToken",
			"value": ""
		},
		{
			"key": "id0",
			"value": ""
		},
		{
			"key": "name0",
			"value": ""
		},
		{
			"key": "type0",
			"value": ""
		},
		{
			"key": "OrderID0",
			"value": ""
		}
	]
}